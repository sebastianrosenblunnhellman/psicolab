//Prisma schema file

datasource db {
    provider = "postgresql"
    url     = env("DATABASE_URL")
    schemas = ["neon_auth"]
}

generator client {
    provider         = "prisma-client-js"
    previewFeatures = ["multiSchema"]
}

model users_sync {
    id          String          @id @db.Text
    raw_json    Json?           @db.JsonB
    name        String?         @db.Text @map("name")
    email       String?         @db.Text @map("email")
    created_at  DateTime?       @db.Timestamptz @map("created_at")
    updated_at  DateTime?       @db.Timestamptz @map("updated_at")
    deleted_at  DateTime?       @db.Timestamptz @map("deleted_at")
    user_profile  user_profile?
    saved_content saved_content[]
    course_progress course_progress[]

    @@schema("neon_auth") // Added @@schema attribute
}

model user_profile {
    user_id             String   @id @db.Text
    name                String?
    last_name           String?
    bio                 String?
    profile_picture_url String?
    location            String?
    website             String?
    updated_at          DateTime @default(now()) @db.Timestamptz
    users_sync          users_sync @relation(fields: [user_id], references: [id])

    @@schema("neon_auth") // Added @@schema attribute
}

model saved_content {
    id           Int      @id @default(autoincrement())
    user_id      String   @db.Text
    content_id   String?
    content_type String?
    saved_at     DateTime @default(now()) @db.Timestamptz
    users_sync   users_sync @relation(fields: [user_id], references: [id])

    @@unique([user_id, content_id, content_type])
    @@schema("neon_auth") // Added @@schema attribute
}

